apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }} 
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.app.name }} 
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }} 
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }} 
    spec:
{{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.app.name }}-serviceaccount
{{- end }}
{{- if .Values.persistence.enabled }}
      volumes:
        - name: {{ .Values.app.name }}-pv-storage
          persistentVolumeClaim:
            claimName: {{ .Values.app.name }}-pv-claim
{{- end }}
      containers:
      - name: {{ .Values.app.name }}
        image: {{ .Values.image.registryUrl }}{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }} 
        imagePullPolicy: {{ .Values.image.pullPolicy }} 
        ports:
        - name: http 
          containerPort: {{ .Values.app.port }}
        {{- if .Values.resourcesEnabled }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- end }} 
{{- if .Values.app.env }}
        envFrom:
        - configMapRef:
            name: {{ .Values.app.name }}-configmap
{{- end }}
{{- if .Values.persistence.enabled }}
        volumeMounts:
          - mountPath: {{ .Values.persistence.mountpath | quote }}
            name: {{ .Values.app.name }}-pv-storage
{{- end }}
{{- if .Values.image.privateRegistry.enabled }}
      imagePullSecrets:
{{- if .Values.image.privateRegistry.global }}
      - name: {{ .Values.image.privateRegistry.globalSecret }}
{{- else }}
      - name: {{ .Values.image.privateRegistry.secret }}
{{- end }}
{{- end }}

